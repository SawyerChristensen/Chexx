-does pawn promotion truly work? can it be read correctly in save files after the fact? uhhhhhhhhh
-make updateGameState process 91+ indexes, ie, promotions for online play

-can the cpu even promote pieces???

-make achievements consult the hard drive before bothering firestore with updates. costly if not implemented!
    -just modify the unlockAchievement function
    -achievement notifications?

//////////////////////////////////////////////////////
Achievements: (line means to be included at launch)
    Hex Machina - Checkmate the CPU -------------------------------- implemented
    Hexceeded Hexpectations - Win a joined game -------------------------------- implemented? (test if doesnt activate if you created the game as well)
    Friendly Hexchange - Have a player join a game you created ---------------- implemented
    Hexcalibur - Underpromote a pawn to a knight -------------------------------- implemented
    Hexecutioner - Checkmate after capturing all enemy pieces --------------------------------
    Hexperimenter - Win with 10 different openings
    Hexathon - Win 26 games
    Hexpedition - Move your king to the opposing kingâ€™s starting position ----------------
    Hexplorer - Visit every tile in a single game
    Hextra Power - Promote a pawn for the first time ---------------- implemented
    Hexceptional Morale - Promote 3 pawns in a single game
    The Great Hexcape - Checkmate after being put in check 3 times
    Hexclusion Zone - Deliver a smothered mate
    Hextreme Measures - Checkmate using your own king -------------------------------- (when coding this, dont include the king check for every single checkmate check, just check if its checkmate first, then if the opposing king contributed with a second run after. this prevents slowing down the main game loop)
    Tactical Hexcellence - Checkmate without losing any pieces
    
    Secret Achievements
    Hexpect the Unexpected - Open by moving your king --------------------------------
    Hexhausted - Have a game last over 100 turns --------------------------------
    Seasoned Hexpert - Complete all other achievements
    
    Hexceptional Win! - ???
    Un-Hexciting Finish - Deliver a Stalemate
//////////////////////////////////////////////////////

-implement ELO changing at the resolution of online games
    -finalize game ending stuff
    
-make sure games auto delete themselves if they havent been interacted with in awhile. the game codes shoud just be for live games

-facebook sign in

-enable Sign in with Apple (LAST STEP, NEEDS AN APPLE DEVELOPER ACCOUNT)(COSTS $100 A YEAR)
-enable gamecenter achievements (need apple developer program)



Bugs:
-entering in a weird join code can crash the app
-login does not check if your email is actually real
-pawn promotion screen should neever been seen in main menu


BEFORE LAUNCH:
-app delegate file and figure out the use for all the other template files (theyre there for a reason)
-figure out if I really need these silly storyboard files still, can probably delete with some modification to other files
    -launch screen (required) & main menu /is it???


******************************
RELEASE!! :D
******************************


FOR FUTURE UPDATES:

Bugs:
-user country loads from firestore every time profile is opened, local storage should update from firestore once the app is opened, then pull from local every profile view

-add random matchmaking if youre signed in?
    -if added, need name checking for online play (just hide the icons, unless joining a friends game)
    
-Leaderboard button underneath profile view, simply rank all users by ELO (icon represented by trophy)
    -display first name, country emoji, elo?

-make games more secure? (this works perfectly fine for now)

-50 move no capture rule for draw

-threefold repetition rule for draw
    -Zobrist hashing for more efficient computation of three-fold rule detection, not needed at launch, could be an important update

-optimizations to game CPU

-game history button in profile view? (store past user games, who vs who, and then display hex fen format)
    -single player stored on device, multiplayer stored in cloud

-haptic feedback on check?

    -alternate board color schemes in settings? (beige, grayscale, black/white/red, other?)
        beige:  Light tile: #ffce9e     "Grey" tile: #e8ab6f        Dark tile: #d18b47
    -put ^ in profile view?
        
-check if any flags have been added in new unicode versions

-favorite opening in profile view?

enable variants, DIFFERENT PAWN RULES FOR MATHEWSONS & MCCOOEYS (as well as starting positions being different)

-enable a "show row/columns A-L 1-11" option in settings

-enable an option to play as black against the CPU (would need to change promotion logic)

-current implementation reloaded the gamescene every status text update. not important but it shouldnt be doing that




Current Minimax algorithm takes: (seems to multiply by 10 every depth)
Depth 1:    0.01 seconds
Depth 2:    ~0.2 seconds
Depth 3:    ~2.0 seoncds depth 3 is target default
Depth 4:    ~20 seconds (unacceptable)

look for current eval functions that loop through the game state, they are all likely o^2 and slow

use hashing/transposition tables/other tech to speed this up especially at higher depths when we potentially eval the same state multiple times

Possible Future Optimizations:
DONE? Alpha-Beta Pruning (done? make suer it works optimally) Up to 10x reduction in search space
Multi-Threading (Parallel Search) Up to 2-8x speedup, depending on hardware (MAKE SURE IT DOESNT LOAD THE GS EVERY THREAD, MIGHT BE THE REASON ITS SO SLOW RN)
Hashing (Zobrist Hashing) 10-50% speedup
Transposition Tables (TT) 20-100% speedup (depending on position complexity)
Parallelized Evaluation Functions 2-4x speedup, depending on how parallelizable the evaluation function is
Simd (Single Instruction, Multiple Data) and GPU Offloading 2-10x speedup, depending on hardware and implementation
Move Ordering and Iterative Deepening 10-30% speedup (did move ordering)
Late Move Reductions 10-30% speedup
Null Move Pruning 10-20% speedup

-prioritizes looking at branches over the current branch max that involve a piece if the user taps on a piece, likely to be moving that piece
-doing cpu calculations in the background, with increasing depths, obviously use this ^ idea

Might be able to get to depth 4 with all of these improvements


RESOURCES:

-Stalemate is not a draw. Instead the player delivering stalemate receives 0.75 points and the stalemated receives 0.25 (implement for multiplayer ruling)

ways to update chess AI/increase computational efficiency:
https://web.archive.org/web/20071026090003/http://www.brucemo.com/compchess/programming/index.htm

General Chess Programming Info:
https://www.chessprogramming.org/Main_Page

Glinski's Hexchess:
https://en.wikipedia.org/wiki/Hexagonal_chess
